USE ohwoodb;

DROP TABLE user;
DROP TABLE user_auth;
DROP TABLE ban;
DROP TABLE board;
DROP TABLE file;
DROP TABLE likes;
DROP TABLE images;

CREATE TABLE user(
   id VARCHAR(50) PRIMARY KEY,
   password VARCHAR(100),
   name VARCHAR(10),
   nickname VARCHAR(10),
   phone CHAR(11),
   address VARCHAR(50),
   level VARCHAR(5) UNIQUE,
   regdate DATE
);

CREATE TABLE ban(
	id VARCHAR(50),
    level VARCHAR(5),
    count int,
    date DATE,
    CONSTRAINT banfk_id_useridpk FOREIGN KEY(id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT banfk_level_userlevel FOREIGN KEY(level) REFERENCES user(level) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE user_auth(
	id VARCHAR(50),
    auth VARCHAR(50),
    CONSTRAINT authfk_id_user_id FOREIGN KEY(id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE board(
   no BIGINT AUTO_INCREMENT PRIMARY KEY,
   title VARCHAR(50),
   author VARCHAR(50),
   content VARCHAR(500),
   regdate DATE,
   updateday DATE,
   CONSTRAINT brdfk_author_user_id FOREIGN KEY(author) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE images(
	no BIGINT AUTO_INCREMENT PRIMARY KEY,
    id VARCHAR(50),
    src VARCHAR(50),
    CONSTRAINT imgfk_id_user_id FOREIGN KEY(id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE files(
	no BIGINT AUTO_INCREMENT PRIMARY KEY,
    id VARCHAR(50),
    src VARCHAR(50),
    CONSTRAINT filefk_id_user_id FOREIGN KEY(id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE likes(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
    no BIGINT,
    uid VARCHAR(50),
    CONSTRAINT likefk_no_board_no FOREIGN KEY(no) REFERENCES board(no) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT likefk_uid_user_id FOREIGN KEY(uid) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

COMMIT;

SELECT * FROM user;
SELECT * FROM user_auth;
INSERT INTO user_auth(id, auth)
VALUES ('1111', 'ROLE_USER');

COMMIT;